{"version":3,"file":"static/js/716.44b0bb71.chunk.js","mappings":"0LACA,MAAgC,kCAAhC,EAAyE,yBAAzE,EAAmH,mC,oBCDtGA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAGtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,oBCkCjC,EA/BoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXL,GAAWM,EAAAA,EAAAA,IAAYR,GACvBS,GAAiBD,EAAAA,EAAAA,IAAYJ,GAM7BM,EAAWR,EAASG,QAAO,SAAAM,GAAO,OACtCA,EAAQC,UAAUC,cAAcC,SAASL,EAAeI,cADlB,IAIxC,OACE,eAAIE,UAAWC,EAAf,SACGN,EAASO,KAAI,gBAAGC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,UAAWO,EAAlB,EAAkBA,YAAlB,OACZ,gBAAIJ,UAAWC,EAAf,UACGJ,EADH,KACgBO,GACd,mBACEC,KAAK,SACLC,QAAS,kBAfE,SAAAH,GACnBZ,GAASgB,EAAAA,EAAAA,IAAcJ,GACxB,CAawBK,CAAaL,EAAnB,EACTH,UAAWC,EAHb,sBAF4BE,EADlB,KAcnB,EClCD,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAA0I,oCCoE1I,EA/DqB,WACnB,IAAMhB,GAAWM,EAAAA,EAAAA,IAAYR,GACvBM,GAAWC,EAAAA,EAAAA,MA6BjB,OACE,kBAAMQ,UAAWC,EAAUQ,SA5BX,SAAAC,GAChBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACf,EAAyBD,EAAKE,SAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAOd,GANwB7B,EAAS8B,MAC/B,SAAArB,GAAO,OACLA,EAAQC,UAAUC,gBAClBc,EAAKE,SAASC,KAAKG,MAAMpB,aAFpB,IAgBPqB,MAAM,2BAAD,OACwBP,EAAKE,SAASC,KAAKG,MAD3C,wBAXe,CACpB,IAAMrB,EAAYkB,EAAKG,MACjBd,EAAcY,EAAOE,MAE3B,GAAyB,KAArBrB,EAAUuB,QAAwC,KAAvBhB,EAAYgB,OAEzC,YADAD,MAAM,oCAGR5B,GAAS8B,EAAAA,EAAAA,IAAW,CAAExB,UAAAA,EAAWO,YAAAA,KACjCQ,EAAKU,OACN,CAKF,EAGC,WACE,mBAAOtB,UAAWC,EAAWsB,QAAQ,OAArC,mBAEE,kBACEvB,UAAWC,EACXI,KAAK,OACLU,KAAK,OACLS,QAAQ,+BACRC,MAAM,8EACNC,UAAQ,QAIZ,mBAAO1B,UAAWC,EAAWsB,QAAQ,SAArC,kBAEE,kBACEvB,UAAWC,EACXI,KAAK,MACLU,KAAK,SACLS,QAAQ,qGACRC,MAAM,oFACNC,UAAQ,QAGZ,mBAAQ1B,UAAWC,EAAmBI,KAAK,SAA3C,2BAKL,EClED,GAAgB,YAAc,4BAA4B,MAAQ,uB,UC2BlE,EAtBe,WACb,IAAMd,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAKQ,UAAWC,EAAAA,YAAhB,UACE,mBAAOD,UAAWC,EAAAA,MAAlB,mCAEE,kBACED,UAAWC,EAAAA,MACXI,KAAK,OACLsB,YAAY,qBACZC,SAZa,SAAAlB,GACnBnB,GAASsC,EAAAA,EAAAA,GAAcnB,EAAEoB,cAAcZ,OACxC,QAeF,EClBc,SAASa,IACtB,IAAMxC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAwC,EAAAA,EAAAA,YAAU,WACRzC,GAAS0C,EAAAA,EAAAA,MACV,GAAE,CAAC1C,KAGF,4BACE,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContacList.module.css?4dc8","redux/contacts/selectors.js","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContacList_contact__list__yBvsF\",\"item\":\"ContacList_item__c00aM\",\"button__delete\":\"ContacList_button__delete__Wd4sd\"};","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import css from './ContacList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilter, selectContacts } from 'redux/contacts/selectors';\nimport React from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectFilter);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const filtered = contacts.filter(contact =>\n    contact.nameInput.toLowerCase().includes(filterContacts.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contact__list}>\n      {filtered.map(({ id, nameInput, numberInput }) => (\n        <li className={css.item} key={id}>\n          {nameInput}: {numberInput}\n          <button\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n            className={css.button__delete}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"input\":\"ContactsForm_input__UjXFK\",\"submit_button\":\"ContactsForm_submit_button__XXzOF\"};","import css from './ContactsForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport React from 'react';\n\nconst ContactsForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAdd = e => {\n    e.preventDefault();\n    const form = e.target;\n    const { name, number } = form.elements;\n    const existingContact = contacts.find(\n      contact =>\n        contact.nameInput.toLowerCase() ===\n        form.elements.name.value.toLowerCase()\n    );\n\n    if (!existingContact) {\n      const nameInput = name.value;\n      const numberInput = number.value;\n\n      if (nameInput.trim() === '' || numberInput.trim() === '') {\n        alert('Please fill all required fields!');\n        return;\n      }\n      dispatch(addContact({ nameInput, numberInput }));\n      form.reset();\n    } else {\n      alert(\n        `A contact with the name ${form.elements.name.value} already exists`\n      );\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleAdd}>\n      <label className={css.label} htmlFor=\"name\">\n        Name:\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, spaces, hyphens, and apostrophes are allowed\"\n          required\n        />\n      </label>\n\n      <label className={css.label} htmlFor=\"number\">\n        Tel:\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Valid Phone Number: Optional '+' Symbol, Digits, Spaces, Hyphens, and Parentheses\"\n          required\n        />\n      </label>\n      <button className={css.submit_button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__box\":\"Filter_filter__box__UMLNc\",\"input\":\"Filter_input__N7T3z\"};","// import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { filterContact } from 'redux/contacts/FilterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  return (\n    <div className={css.filter__box}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Enter name to find\"\n          onChange={handleFilter}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactList from 'components/ContactList/ContactList';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\nimport Filter from 'components/Filter/Filter';\n\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","dispatch","useDispatch","useSelector","filterContacts","filtered","contact","nameInput","toLowerCase","includes","className","css","map","id","numberInput","type","onClick","deleteContact","handleDelete","onSubmit","e","preventDefault","form","target","elements","name","number","find","value","alert","trim","addContact","reset","htmlFor","pattern","title","required","placeholder","onChange","filterContact","currentTarget","Contacts","useEffect","fetchContacts"],"sourceRoot":""}